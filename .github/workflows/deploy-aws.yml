name: Deploy AWS Backend and CMS

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'cms/**'
      - '.github/workflows/deploy-aws.yml'
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Build and deploy with SAM
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_STACK_NAME: zmt-backend
          COGNITO_USER_POOL_ARN: ${{ secrets.COGNITO_USER_POOL_ARN }}
          GITHUB_PAT: ${{ secrets.GH_PAT }}
        run: npm run deploy:backend

      - name: Setup custom domain for API
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ACM_CERTIFICATE_ARN: ${{ secrets.ACM_CERTIFICATE_ARN }}
          API_CUSTOM_DOMAIN: ${{ secrets.API_CUSTOM_DOMAIN }}
          AWS_STACK_NAME: zmt-backend
        run: |
          npm install --legacy-peer-deps
          npm run setup:domain

  deploy-cms:
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Trigger Amplify deployment
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AMPLIFY_APP_ID: ${{ secrets.AMPLIFY_APP_ID }}
        run: |
          echo "Checking Amplify build status for CMS..."
          
          # Check if there's already a running build
          RUNNING_JOBS=$(aws amplify list-jobs \
            --app-id ${AMPLIFY_APP_ID} \
            --branch-name main \
            --max-items 3 \
            --region ${AWS_REGION} \
            --query "jobSummaries[?status=='RUNNING' || status=='PENDING'].jobId" \
            --output text)
          
          if [ -n "$RUNNING_JOBS" ]; then
            echo "⏳ Amplify build already running (Job IDs: $RUNNING_JOBS)"
            echo "Skipping manual trigger - Amplify webhook auto-build is active"
            echo "✅ This is expected behavior when pushing to main branch"
          else
            echo "No running builds detected. Triggering Amplify build..."
            aws amplify start-job \
              --app-id ${AMPLIFY_APP_ID} \
              --branch-name main \
              --job-type RELEASE \
              --region ${AWS_REGION}
            echo "✅ Amplify deployment triggered successfully"
          fi
          
          echo "Check deployment status at: https://console.aws.amazon.com/amplify/home?region=${AWS_REGION}#/${AMPLIFY_APP_ID}"
